"use strict";(self.webpackChunkmikeshogin_website=self.webpackChunkmikeshogin_website||[]).push([[808],{7103:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var t=r(4848),s=r(8453);const i={id:"diagrams",title:"Architecture Diagrams",description:"Visual representations of system architectures and design patterns from real projects"},a="Architecture Diagrams",c={id:"portfolio/diagrams",title:"Architecture Diagrams",description:"Visual representations of system architectures and design patterns from real projects",source:"@site/docs/portfolio/diagrams.md",sourceDirName:"portfolio",slug:"/portfolio/diagrams",permalink:"/ru/portfolio/diagrams",draft:!1,unlisted:!1,editUrl:"https://github.com/mikeshogin/mikeshogin.github.io/tree/main/docs/portfolio/diagrams.md",tags:[],version:"current",frontMatter:{id:"diagrams",title:"Architecture Diagrams",description:"Visual representations of system architectures and design patterns from real projects"},sidebar:"mainSidebar",previous:{title:"Architecture Decision Records",permalink:"/ru/portfolio/adrs"},next:{title:"Resources & Knowledge Hub",permalink:"/ru/resources"}},o={},l=[{value:"Overview",id:"overview",level:2},{value:"System Architecture Diagrams",id:"system-architecture-diagrams",level:2},{value:"E-commerce Platform Architecture",id:"e-commerce-platform-architecture",level:3},{value:"FinTech Payment Processing System",id:"fintech-payment-processing-system",level:3},{value:"Multi-Tenant SaaS Platform",id:"multi-tenant-saas-platform",level:3},{value:"Data Flow Diagrams",id:"data-flow-diagrams",level:2},{value:"Real-Time Analytics Pipeline",id:"real-time-analytics-pipeline",level:3},{value:"Data Synchronization Flow",id:"data-synchronization-flow",level:3},{value:"Deployment Diagrams",id:"deployment-diagrams",level:2},{value:"Kubernetes Deployment Architecture",id:"kubernetes-deployment-architecture",level:3},{value:"CI/CD Pipeline Architecture",id:"cicd-pipeline-architecture",level:3},{value:"Security Architecture Diagrams",id:"security-architecture-diagrams",level:2},{value:"Zero Trust Network Architecture",id:"zero-trust-network-architecture",level:3},{value:"Integration Patterns",id:"integration-patterns",level:2},{value:"Event-Driven Integration",id:"event-driven-integration",level:3},{value:"Diagram Best Practices",id:"diagram-best-practices",level:2},{value:"Abstraction Levels",id:"abstraction-levels",level:3},{value:"Diagram Standards",id:"diagram-standards",level:3},{value:"Tools and Formats",id:"tools-and-formats",level:3},{value:"Value and Impact",id:"value-and-impact",level:2},{value:"Communication Improvement",id:"communication-improvement",level:3},{value:"Documentation Quality",id:"documentation-quality",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(n){const e={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"architecture-diagrams",children:"Architecture Diagrams"}),"\n",(0,t.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'diagram_collection:\n  purpose: "Visual system architecture documentation"\n  formats: ["mermaid", "c4_model", "uml", "flowcharts"]\n  focus: "Real project architectures"\n  complexity_levels: ["high_level", "detailed", "implementation"]\n'})}),"\n",(0,t.jsx)(e.p,{children:"Visual documentation is crucial for understanding complex systems. This collection showcases architectural diagrams from real consulting projects, demonstrating different visualization techniques and abstraction levels."}),"\n",(0,t.jsx)(e.h2,{id:"system-architecture-diagrams",children:"System Architecture Diagrams"}),"\n",(0,t.jsx)(e.h3,{id:"e-commerce-platform-architecture",children:"E-commerce Platform Architecture"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Project"}),": Microservices Migration",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Scale"}),": 10M+ users, 50+ services",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Technology"}),": Node.js, React, PostgreSQL, Redis, Kubernetes"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mermaid",children:'graph TB\n    subgraph "External"\n        U[Users]\n        M[Mobile Apps]\n        A[Admin Panel]\n    end\n    \n    subgraph "CDN & Load Balancing"\n        CDN[CloudFlare CDN]\n        LB[Load Balancer]\n    end\n    \n    subgraph "API Gateway Layer"\n        AG[API Gateway]\n        AUTH[Auth Service]\n        RATE[Rate Limiter]\n    end\n    \n    subgraph "Core Services"\n        US[User Service]\n        PS[Product Service]\n        OS[Order Service]\n        PAY[Payment Service]\n        NOT[Notification Service]\n    end\n    \n    subgraph "Data Layer"\n        PG[(PostgreSQL)]\n        REDIS[(Redis Cache)]\n        ES[(Elasticsearch)]\n    end\n    \n    subgraph "External Services"\n        STRIPE[Stripe API]\n        EMAIL[SendGrid]\n        SMS[Twilio]\n    end\n    \n    U --\x3e CDN\n    M --\x3e CDN\n    A --\x3e CDN\n    CDN --\x3e LB\n    LB --\x3e AG\n    \n    AG --\x3e AUTH\n    AG --\x3e RATE\n    AG --\x3e US\n    AG --\x3e PS\n    AG --\x3e OS\n    \n    US --\x3e PG\n    PS --\x3e PG\n    PS --\x3e ES\n    OS --\x3e PG\n    OS --\x3e PAY\n    \n    PAY --\x3e STRIPE\n    NOT --\x3e EMAIL\n    NOT --\x3e SMS\n    \n    US --\x3e REDIS\n    PS --\x3e REDIS\n    OS --\x3e REDIS\n'})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Key Design Decisions"}),":"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"API Gateway"}),": Single entry point for all client requests"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Service Isolation"}),": Each service owns its data and business logic"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Caching Strategy"}),": Redis for session data and frequently accessed content"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Search"}),": Elasticsearch for product catalog search and analytics"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"fintech-payment-processing-system",children:"FinTech Payment Processing System"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Project"}),": Event-Driven Financial Platform",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Compliance"}),": PCI DSS, SOX",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Technology"}),": Java, Spring Boot, Apache Kafka, PostgreSQL"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mermaid",children:'graph TD\n    subgraph "Client Applications"\n        WEB[Web Application]\n        MOBILE[Mobile App]\n        API_CLIENT[API Clients]\n    end\n    \n    subgraph "API Gateway & Security"\n        GATEWAY[API Gateway]\n        AUTH[OAuth2 Server]\n        VAULT[HashiCorp Vault]\n    end\n    \n    subgraph "Command Side (CQRS)"\n        CMD_HANDLER[Command Handlers]\n        AGGREGATES[Domain Aggregates]\n        EVENT_STORE[(Event Store)]\n    end\n    \n    subgraph "Event Streaming"\n        KAFKA[Apache Kafka]\n        SCHEMA_REG[Schema Registry]\n    end\n    \n    subgraph "Query Side (CQRS)"\n        PROJECTIONS[Event Projections]\n        READ_DB[(Read Database)]\n        QUERY_HANDLERS[Query Handlers]\n    end\n    \n    subgraph "External Integrations"\n        BANK_API[Bank APIs]\n        FRAUD_SERVICE[Fraud Detection]\n        COMPLIANCE[Compliance Service]\n    end\n    \n    subgraph "Monitoring & Audit"\n        AUDIT_LOG[(Audit Log)]\n        METRICS[Prometheus]\n        ALERTS[AlertManager]\n    end\n    \n    WEB --\x3e GATEWAY\n    MOBILE --\x3e GATEWAY\n    API_CLIENT --\x3e GATEWAY\n    \n    GATEWAY --\x3e AUTH\n    GATEWAY --\x3e CMD_HANDLER\n    GATEWAY --\x3e QUERY_HANDLERS\n    \n    CMD_HANDLER --\x3e AGGREGATES\n    AGGREGATES --\x3e EVENT_STORE\n    EVENT_STORE --\x3e KAFKA\n    \n    KAFKA --\x3e PROJECTIONS\n    PROJECTIONS --\x3e READ_DB\n    QUERY_HANDLERS --\x3e READ_DB\n    \n    CMD_HANDLER --\x3e BANK_API\n    CMD_HANDLER --\x3e FRAUD_SERVICE\n    EVENT_STORE --\x3e COMPLIANCE\n    \n    EVENT_STORE --\x3e AUDIT_LOG\n    AGGREGATES --\x3e METRICS\n    METRICS --\x3e ALERTS\n'})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Architecture Highlights"}),":"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Event Sourcing"}),": Complete audit trail for all financial transactions"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"CQRS"}),": Separate read/write models for optimal performance"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Event Streaming"}),": Real-time processing with Apache Kafka"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Security"}),": Vault for secrets management, comprehensive audit logging"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"multi-tenant-saas-platform",children:"Multi-Tenant SaaS Platform"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Project"}),": B2B Analytics Platform",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Scale"}),": 500+ tenants, 1TB+ data",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Technology"}),": Python, Django, PostgreSQL, Celery, Redis"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mermaid",children:'graph TB\n    subgraph "Tenant Applications"\n        T1[Tenant A App]\n        T2[Tenant B App]\n        T3[Tenant C App]\n    end\n    \n    subgraph "Load Balancing & Routing"\n        LB[Load Balancer]\n        ROUTER[Tenant Router]\n    end\n    \n    subgraph "Application Layer"\n        APP1[App Instance 1]\n        APP2[App Instance 2]\n        APP3[App Instance 3]\n    end\n    \n    subgraph "Background Processing"\n        CELERY[Celery Workers]\n        SCHEDULER[Celery Beat]\n        BROKER[Redis Broker]\n    end\n    \n    subgraph "Data Layer"\n        subgraph "Tenant Isolation"\n            SCHEMA_A[(Schema A)]\n            SCHEMA_B[(Schema B)]\n            SCHEMA_C[(Schema C)]\n        end\n        SHARED_DB[(Shared Database)]\n    end\n    \n    subgraph "Analytics & Reporting"\n        ETL[ETL Pipeline]\n        DW[(Data Warehouse)]\n        BI[BI Dashboard]\n    end\n    \n    subgraph "Monitoring"\n        LOGS[Centralized Logging]\n        METRICS[Tenant Metrics]\n        ALERTS[Alert System]\n    end\n    \n    T1 --\x3e LB\n    T2 --\x3e LB\n    T3 --\x3e LB\n    \n    LB --\x3e ROUTER\n    ROUTER --\x3e APP1\n    ROUTER --\x3e APP2\n    ROUTER --\x3e APP3\n    \n    APP1 --\x3e SCHEMA_A\n    APP2 --\x3e SCHEMA_B\n    APP3 --\x3e SCHEMA_C\n    \n    APP1 --\x3e BROKER\n    APP2 --\x3e BROKER\n    APP3 --\x3e BROKER\n    \n    BROKER --\x3e CELERY\n    SCHEDULER --\x3e CELERY\n    \n    CELERY --\x3e SHARED_DB\n    CELERY --\x3e ETL\n    ETL --\x3e DW\n    DW --\x3e BI\n    \n    APP1 --\x3e LOGS\n    APP2 --\x3e LOGS\n    APP3 --\x3e LOGS\n    \n    LOGS --\x3e METRICS\n    METRICS --\x3e ALERTS\n'})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Multi-Tenancy Strategy"}),":"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Schema-per-Tenant"}),": Strong data isolation using PostgreSQL schemas"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Shared Infrastructure"}),": Cost-effective resource utilization"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Tenant Routing"}),": Dynamic routing based on subdomain/headers"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Background Processing"}),": Tenant-aware job processing with Celery"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"data-flow-diagrams",children:"Data Flow Diagrams"}),"\n",(0,t.jsx)(e.h3,{id:"real-time-analytics-pipeline",children:"Real-Time Analytics Pipeline"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Project"}),": IoT Data Processing Platform",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Volume"}),": 1M+ events/second",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Technology"}),": Apache Kafka, Apache Flink, ClickHouse"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mermaid",children:'graph LR\n    subgraph "Data Sources"\n        IOT[IoT Devices]\n        WEB[Web Events]\n        MOBILE[Mobile Events]\n        API[API Events]\n    end\n    \n    subgraph "Ingestion Layer"\n        KAFKA_IN[Kafka Ingestion]\n        SCHEMA[Schema Validation]\n        PARTITION[Partitioning]\n    end\n    \n    subgraph "Stream Processing"\n        FLINK[Apache Flink]\n        WINDOW[Windowing]\n        AGGREGATE[Aggregation]\n        ENRICH[Data Enrichment]\n    end\n    \n    subgraph "Storage Layer"\n        CLICKHOUSE[(ClickHouse)]\n        S3[(S3 Archive)]\n        REDIS_CACHE[(Redis Cache)]\n    end\n    \n    subgraph "Serving Layer"\n        API_LAYER[Analytics API]\n        DASHBOARD[Real-time Dashboard]\n        ALERTS[Alert System]\n    end\n    \n    IOT --\x3e KAFKA_IN\n    WEB --\x3e KAFKA_IN\n    MOBILE --\x3e KAFKA_IN\n    API --\x3e KAFKA_IN\n    \n    KAFKA_IN --\x3e SCHEMA\n    SCHEMA --\x3e PARTITION\n    PARTITION --\x3e FLINK\n    \n    FLINK --\x3e WINDOW\n    WINDOW --\x3e AGGREGATE\n    AGGREGATE --\x3e ENRICH\n    \n    ENRICH --\x3e CLICKHOUSE\n    ENRICH --\x3e S3\n    ENRICH --\x3e REDIS_CACHE\n    \n    CLICKHOUSE --\x3e API_LAYER\n    REDIS_CACHE --\x3e API_LAYER\n    API_LAYER --\x3e DASHBOARD\n    API_LAYER --\x3e ALERTS\n'})}),"\n",(0,t.jsx)(e.h3,{id:"data-synchronization-flow",children:"Data Synchronization Flow"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Project"}),": Multi-System Integration",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Pattern"}),": Event-Driven Synchronization",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Technology"}),": Apache Kafka, Debezium, PostgreSQL"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant CRM as CRM System\n    participant DB1 as CRM Database\n    participant CDC as Change Data Capture\n    participant KAFKA as Kafka\n    participant SYNC as Sync Service\n    participant DB2 as Analytics DB\n    participant CACHE as Redis Cache\n    participant API as Analytics API\n    \n    CRM->>DB1: Update Customer\n    DB1->>CDC: Database Change Log\n    CDC->>KAFKA: Publish Change Event\n    KAFKA->>SYNC: Consume Change Event\n    SYNC->>DB2: Transform & Store\n    SYNC->>CACHE: Update Cache\n    API->>CACHE: Query Customer Data\n    API->>DB2: Query Analytics Data\n"})}),"\n",(0,t.jsx)(e.h2,{id:"deployment-diagrams",children:"Deployment Diagrams"}),"\n",(0,t.jsx)(e.h3,{id:"kubernetes-deployment-architecture",children:"Kubernetes Deployment Architecture"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Project"}),": Microservices Platform",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Environment"}),": Multi-region Kubernetes",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Technology"}),": Kubernetes, Istio, Prometheus"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mermaid",children:'graph TB\n    subgraph "Production Cluster"\n        subgraph "Ingress"\n            INGRESS[Nginx Ingress]\n            CERT[Cert Manager]\n        end\n        \n        subgraph "Service Mesh"\n            ISTIO[Istio Control Plane]\n            ENVOY[Envoy Proxies]\n        end\n        \n        subgraph "Application Namespaces"\n            subgraph "Frontend NS"\n                FE_POD[Frontend Pods]\n                FE_SVC[Frontend Service]\n            end\n            \n            subgraph "Backend NS"\n                BE_POD[Backend Pods]\n                BE_SVC[Backend Service]\n                BE_HPA[HPA]\n            end\n            \n            subgraph "Data NS"\n                DB_POD[Database Pods]\n                CACHE_POD[Cache Pods]\n                PVC[Persistent Volumes]\n            end\n        end\n        \n        subgraph "Monitoring NS"\n            PROM[Prometheus]\n            GRAFANA[Grafana]\n            JAEGER[Jaeger]\n        end\n        \n        subgraph "System NS"\n            DNS[CoreDNS]\n            SCHEDULER[Kube Scheduler]\n            CONTROLLER[Controllers]\n        end\n    end\n    \n    INGRESS --\x3e ISTIO\n    ISTIO --\x3e ENVOY\n    ENVOY --\x3e FE_SVC\n    ENVOY --\x3e BE_SVC\n    \n    FE_POD --\x3e FE_SVC\n    BE_POD --\x3e BE_SVC\n    BE_HPA --\x3e BE_POD\n    \n    BE_POD --\x3e DB_POD\n    BE_POD --\x3e CACHE_POD\n    DB_POD --\x3e PVC\n    \n    PROM --\x3e BE_POD\n    PROM --\x3e FE_POD\n    GRAFANA --\x3e PROM\n    JAEGER --\x3e ENVOY\n'})}),"\n",(0,t.jsx)(e.h3,{id:"cicd-pipeline-architecture",children:"CI/CD Pipeline Architecture"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Project"}),": DevOps Transformation",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Tools"}),": GitLab CI, Docker, Kubernetes, ArgoCD"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mermaid",children:'graph LR\n    subgraph "Development"\n        DEV[Developer]\n        GIT[Git Repository]\n        MR[Merge Request]\n    end\n    \n    subgraph "CI Pipeline"\n        BUILD[Build Stage]\n        TEST[Test Stage]\n        SCAN[Security Scan]\n        PACKAGE[Package Stage]\n    end\n    \n    subgraph "Artifact Storage"\n        REGISTRY[Container Registry]\n        HELM[Helm Repository]\n    end\n    \n    subgraph "CD Pipeline"\n        ARGOCD[ArgoCD]\n        GITOPS[GitOps Repository]\n    end\n    \n    subgraph "Environments"\n        DEV_ENV[Development]\n        STAGING[Staging]\n        PROD[Production]\n    end\n    \n    subgraph "Monitoring"\n        MONITOR[Monitoring]\n        ALERTS[Alerting]\n        LOGS[Logging]\n    end\n    \n    DEV --\x3e GIT\n    GIT --\x3e MR\n    MR --\x3e BUILD\n    \n    BUILD --\x3e TEST\n    TEST --\x3e SCAN\n    SCAN --\x3e PACKAGE\n    \n    PACKAGE --\x3e REGISTRY\n    PACKAGE --\x3e HELM\n    \n    REGISTRY --\x3e ARGOCD\n    HELM --\x3e ARGOCD\n    ARGOCD --\x3e GITOPS\n    \n    GITOPS --\x3e DEV_ENV\n    GITOPS --\x3e STAGING\n    GITOPS --\x3e PROD\n    \n    DEV_ENV --\x3e MONITOR\n    STAGING --\x3e MONITOR\n    PROD --\x3e MONITOR\n    \n    MONITOR --\x3e ALERTS\n    MONITOR --\x3e LOGS\n'})}),"\n",(0,t.jsx)(e.h2,{id:"security-architecture-diagrams",children:"Security Architecture Diagrams"}),"\n",(0,t.jsx)(e.h3,{id:"zero-trust-network-architecture",children:"Zero Trust Network Architecture"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Project"}),": Enterprise Security Modernization",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Framework"}),": Zero Trust",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Technology"}),": Istio, OPA, HashiCorp Vault"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mermaid",children:'graph TB\n    subgraph "External"\n        USER[Users]\n        DEVICE[Devices]\n        PARTNER[Partners]\n    end\n    \n    subgraph "Identity & Access"\n        IDP[Identity Provider]\n        MFA[Multi-Factor Auth]\n        DEVICE_TRUST[Device Trust]\n    end\n    \n    subgraph "Policy Engine"\n        PDP[Policy Decision Point]\n        PEP[Policy Enforcement Point]\n        RULES[Policy Rules]\n    end\n    \n    subgraph "Service Mesh"\n        PROXY[Service Proxy]\n        MTLS[mTLS]\n        AUTHZ[Authorization]\n    end\n    \n    subgraph "Applications"\n        APP1[Application 1]\n        APP2[Application 2]\n        APP3[Application 3]\n    end\n    \n    subgraph "Data Layer"\n        DB[(Database)]\n        VAULT[Secrets Vault]\n        ENCRYPT[Encryption]\n    end\n    \n    subgraph "Monitoring"\n        AUDIT[Audit Logs]\n        SIEM[SIEM]\n        THREAT[Threat Detection]\n    end\n    \n    USER --\x3e IDP\n    DEVICE --\x3e DEVICE_TRUST\n    PARTNER --\x3e IDP\n    \n    IDP --\x3e MFA\n    MFA --\x3e PDP\n    DEVICE_TRUST --\x3e PDP\n    \n    PDP --\x3e RULES\n    PDP --\x3e PEP\n    PEP --\x3e PROXY\n    \n    PROXY --\x3e MTLS\n    MTLS --\x3e AUTHZ\n    AUTHZ --\x3e APP1\n    AUTHZ --\x3e APP2\n    AUTHZ --\x3e APP3\n    \n    APP1 --\x3e VAULT\n    APP2 --\x3e VAULT\n    APP3 --\x3e VAULT\n    \n    VAULT --\x3e DB\n    DB --\x3e ENCRYPT\n    \n    PEP --\x3e AUDIT\n    PROXY --\x3e AUDIT\n    AUDIT --\x3e SIEM\n    SIEM --\x3e THREAT\n'})}),"\n",(0,t.jsx)(e.h2,{id:"integration-patterns",children:"Integration Patterns"}),"\n",(0,t.jsx)(e.h3,{id:"event-driven-integration",children:"Event-Driven Integration"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Project"}),": Enterprise System Integration",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Pattern"}),": Event Sourcing + CQRS",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.strong,{children:"Technology"}),": Apache Kafka, Event Store"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mermaid",children:'graph TD\n    subgraph "Source Systems"\n        CRM[CRM System]\n        ERP[ERP System]\n        ECOM[E-commerce]\n    end\n    \n    subgraph "Event Infrastructure"\n        EVENT_BUS[Event Bus]\n        EVENT_STORE[(Event Store)]\n        SCHEMA_REG[Schema Registry]\n    end\n    \n    subgraph "Event Processing"\n        PROCESSOR[Event Processor]\n        TRANSFORMER[Data Transformer]\n        VALIDATOR[Event Validator]\n    end\n    \n    subgraph "Target Systems"\n        DW[(Data Warehouse)]\n        ANALYTICS[Analytics Platform]\n        NOTIFICATION[Notification Service]\n    end\n    \n    subgraph "Monitoring"\n        METRICS[Event Metrics]\n        TRACING[Distributed Tracing]\n        ALERTS[Alert System]\n    end\n    \n    CRM --\x3e EVENT_BUS\n    ERP --\x3e EVENT_BUS\n    ECOM --\x3e EVENT_BUS\n    \n    EVENT_BUS --\x3e EVENT_STORE\n    EVENT_BUS --\x3e SCHEMA_REG\n    EVENT_BUS --\x3e PROCESSOR\n    \n    PROCESSOR --\x3e TRANSFORMER\n    TRANSFORMER --\x3e VALIDATOR\n    VALIDATOR --\x3e DW\n    VALIDATOR --\x3e ANALYTICS\n    VALIDATOR --\x3e NOTIFICATION\n    \n    EVENT_BUS --\x3e METRICS\n    PROCESSOR --\x3e TRACING\n    METRICS --\x3e ALERTS\n'})}),"\n",(0,t.jsx)(e.h2,{id:"diagram-best-practices",children:"Diagram Best Practices"}),"\n",(0,t.jsx)(e.h3,{id:"abstraction-levels",children:"Abstraction Levels"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'diagram_levels:\n  context_level:\n    purpose: "System boundaries and external interactions"\n    audience: "Stakeholders, business users"\n    detail: "High-level components only"\n    \n  container_level:\n    purpose: "Major building blocks and technology choices"\n    audience: "Architects, senior developers"\n    detail: "Applications, databases, key technologies"\n    \n  component_level:\n    purpose: "Internal structure of containers"\n    audience: "Developers, technical leads"\n    detail: "Classes, modules, interfaces"\n    \n  code_level:\n    purpose: "Implementation details"\n    audience: "Developers"\n    detail: "Classes, methods, relationships"\n'})}),"\n",(0,t.jsx)(e.h3,{id:"diagram-standards",children:"Diagram Standards"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def diagram_standards():\n    return {\n        'naming_conventions': {\n            'components': 'PascalCase',\n            'services': 'kebab-case',\n            'databases': 'UPPERCASE',\n            'external_systems': 'Title Case'\n        },\n        'color_coding': {\n            'user_interfaces': '#4A90E2',\n            'services': '#7ED321',\n            'databases': '#F5A623',\n            'external_systems': '#D0021B',\n            'infrastructure': '#9013FE'\n        },\n        'layout_principles': [\n            'left_to_right_data_flow',\n            'group_related_components',\n            'minimize_crossing_lines',\n            'consistent_spacing'\n        ]\n    }\n"})}),"\n",(0,t.jsx)(e.h3,{id:"tools-and-formats",children:"Tools and Formats"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'diagram_tools:\n  mermaid:\n    pros: ["version_controlled", "code_based", "github_integration"]\n    cons: ["limited_styling", "complex_layouts_difficult"]\n    use_cases: ["documentation", "simple_flows", "sequence_diagrams"]\n    \n  c4_model:\n    pros: ["standardized_approach", "multiple_abstraction_levels"]\n    cons: ["learning_curve", "tool_specific"]\n    use_cases: ["architecture_documentation", "stakeholder_communication"]\n    \n  lucidchart:\n    pros: ["collaborative", "rich_styling", "templates"]\n    cons: ["not_version_controlled", "subscription_cost"]\n    use_cases: ["presentations", "complex_diagrams", "workshops"]\n    \n  draw_io:\n    pros: ["free", "web_based", "export_options"]\n    cons: ["not_code_based", "collaboration_limitations"]\n    use_cases: ["quick_sketches", "detailed_diagrams", "offline_work"]\n'})}),"\n",(0,t.jsx)(e.h2,{id:"value-and-impact",children:"Value and Impact"}),"\n",(0,t.jsx)(e.h3,{id:"communication-improvement",children:"Communication Improvement"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def diagram_impact():\n    return {\n        'stakeholder_alignment': {\n            'before': 'Verbal descriptions, misunderstandings',\n            'after': 'Visual clarity, shared understanding',\n            'improvement': '80% reduction in requirement clarifications'\n        },\n        'development_speed': {\n            'before': 'Unclear architecture, frequent questions',\n            'after': 'Clear visual guidance, self-service documentation',\n            'improvement': '40% faster onboarding for new developers'\n        },\n        'decision_making': {\n            'before': 'Abstract discussions, unclear trade-offs',\n            'after': 'Visual analysis, clear alternatives',\n            'improvement': '60% faster architectural decisions'\n        }\n    }\n"})}),"\n",(0,t.jsx)(e.h3,{id:"documentation-quality",children:"Documentation Quality"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"Aspect"}),(0,t.jsx)(e.th,{children:"Text-Only"}),(0,t.jsx)(e.th,{children:"With Diagrams"}),(0,t.jsx)(e.th,{children:"Improvement"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.strong,{children:"Comprehension"})}),(0,t.jsx)(e.td,{children:"40%"}),(0,t.jsx)(e.td,{children:"85%"}),(0,t.jsx)(e.td,{children:"+112%"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.strong,{children:"Retention"})}),(0,t.jsx)(e.td,{children:"25%"}),(0,t.jsx)(e.td,{children:"70%"}),(0,t.jsx)(e.td,{children:"+180%"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.strong,{children:"Onboarding Time"})}),(0,t.jsx)(e.td,{children:"4 weeks"}),(0,t.jsx)(e.td,{children:"1.5 weeks"}),(0,t.jsx)(e.td,{children:"-62%"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.strong,{children:"Architecture Alignment"})}),(0,t.jsx)(e.td,{children:"60%"}),(0,t.jsx)(e.td,{children:"95%"}),(0,t.jsx)(e.td,{children:"+58%"})]})]})]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(e.p,{children:"Need help visualizing your system architecture or improving your technical documentation?"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'# Request architecture visualization consultation\ncurl -X POST https://mikeshogin.com/contact \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "service": "Architecture Documentation",\n    "focus": "diagram_creation",\n    "message": "Help us create clear architectural diagrams"\n  }\'\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:(0,t.jsx)(e.a,{href:"mailto:contact@mikeshogin.com?subject=Architecture%20Diagram%20Consultation",children:"Discuss Architecture Visualization \u2192"})})})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>a,x:()=>c});var t=r(6540);const s={},i=t.createContext(s);function a(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);